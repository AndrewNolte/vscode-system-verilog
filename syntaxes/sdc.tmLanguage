<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>fileTypes</key>
    <array>
        <string>sdc</string>
    </array>
    <key>foldingStartMarker</key>
    <string>\{\s*$</string>
    <key>foldingStopMarker</key>
    <string>^\s*\}</string>
    <key>keyEquivalent</key>
    <string>^~T</string>
    <key>name</key>
    <string>SDC</string>
    <key>patterns</key>
    <array>
        <dict>
            <key>name</key>
            <string>storage.type.sdc</string>
            <key>match</key>
            <string>(-add_delay|-end|-clock_fall|-clock|-to|-from|-max|-min|-name|-no_duplicates|-source|-period|-level_sensitive|-edge_triggered|-hierarchical|-sdc|-hsc|-quiet|-regexp|-nocase|-exact|-filter|-of_objects|-waveform|-add|-edges|-divide_by|-multiply_by|-duty_cycle|-invert|-edge_shift|-master_clock|-setup|-hold|-rise|-fall|-high|-low|-late|-early|-rise_from|-fall_from|-rise_to|-fall_to|-add_delay|-clock_fall|-network_latency_included|-source_latency_included|-through|-pin|-from_pin|-input_transition_rise|-input_transition_fall|-library|-lib_cell|-substract_pin_load|-wire_load|-pin_load|-max_library|-min_library|-group|-asynchronous|-nowarn|-create_base_clocks)</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>(?&lt;=^|;)\s*((#))</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.line.number-sign.tcl</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.tcl</string>
                </dict>
            </dict>
            <key>contentName</key>
            <string>comment.line.number-sign.tcl</string>
            <key>end</key>
            <string>\n</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(\\\\|\\\n)</string>
                </dict>
            </array>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.tcl</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?&lt;=^|[\[{;])\s*(if|while|for|catch|return|break|continue|switch|exit|foreach)\b</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.tcl</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?&lt;=^|})\s*(then|elseif|else)\b</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.tcl</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.tcl</string>
                </dict>
            </dict>
            <key>match</key>
            <string>^\s*(proc)\s+([^\s]+)</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.tcl</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?&lt;=^|[\[{;])\s*(after|append|array|auto_execok|auto_import|auto_load|auto_mkindex|auto_mkindex_old|auto_qualify|auto_reset|bgerror|binary|cd|clock|close|concat|dde|encoding|eof|error|eval|exec|expr|fblocked|fconfigure|fcopy|file|fileevent|filename|flush|format|gets|glob|global|history|http|incr|info|interp|join|lappend|library|lindex|linsert|list|llength|load|lrange|lreplace|lsearch|lset|lsort|memory|msgcat|namespace|open|package|parray|pid|pkg::create|pkg_mkIndex|proc|puts|pwd|re_syntax|read|registry|rename|resource|scan|seek|set|socket|SafeBase|source|split|string|subst|Tcl|tcl_endOfWord|tcl_findLibrary|tcl_startOfNextWord|tcl_startOfPreviousWord|tcl_wordBreakAfter|tcl_wordBreakBefore|tcltest|tclvars|tell|time|trace|unknown|unset|update|uplevel|upvar|variable|vwait|set_operating_conditions|set_wire_load_min_block_size|set_wire_load_mode|set_wire_load_model|set_wire_load_selection_group|set_drive|set_driving_cell|set_fanout_load|set_input_transition|set_load|set_port_fanout_number|set_max_capacitance|set_max_fanout|set_max_transition|set_min_capacitance|create_clock|create_generated_clock|set_clock_gating_checkset_clock_latencyset_clock_transitionset_clock_uncertaintyset_data_check|set_disable_timing|set_input_delay|set_max_time_borrow|set_output_delay|set_propagated_clock|set_resistance|set_false_path|set_max_delay|set_min_delay|set_multicycle_path|set_max_area|set_max_dynamic_power|set_max_leakage_power|set_min_porosity|set_case_analysis|set_logic_dc|set_logic_one|set_logic_zero|current_design|get_clocks|get_registers|get_ports|all_clocks|get_cells|get_pins|get_nets|get_libs|get_lib_cells|get_collection_size|get_lib_pins|derive_pll_clocks|derive_clock_uncertainty|set_clock_groups)\b</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(?i)(\d+\s*(fs|ps|ns|us|ms|s)?)\b</string>
            <key>name</key>
            <string>constant.numeric.ucf</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>(?&lt;=^|[\[{;])\s*(regexp|regsub)\b\s*</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.tcl</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>special-case regexp/regsub keyword in order to handle the expression</string>
            <key>end</key>
            <string>[\n;\]]</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\(?:.|\n)</string>
                    <key>name</key>
                    <string>constant.character.escape.tcl</string>
                </dict>
                <dict>
                    <key>comment</key>
                    <string>switch for regexp</string>
                    <key>match</key>
                    <string>-\w+\s*</string>
                </dict>
                <dict>
                    <key>applyEndPatternLast</key>
                    <integer>1</integer>
                    <key>begin</key>
                    <string>--\s*</string>
                    <key>comment</key>
                    <string>end of switches</string>
                    <key>end</key>
                    <string></string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#regexp</string>
                        </dict>
                    </array>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#regexp</string>
                </dict>
            </array>
        </dict>
        <dict>
            <key>include</key>
            <string>#escape</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#variable</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.tcl</string>
                </dict>
            </dict>
            <key>end</key>
            <string>"</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.tcl</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.tcl</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#escape</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#variable</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#embedded</string>
                </dict>
            </array>
        </dict>
    </array>
    <key>repository</key>
    <dict>
        <key>bare-string</key>
        <dict>
            <key>begin</key>
            <string>(?:^|(?&lt;=\s))"</string>
            <key>comment</key>
            <string>matches a single quote-enclosed word without scoping</string>
            <key>end</key>
            <string>"([^\s\]]*)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>invalid.illegal.tcl</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#escape</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#variable</string>
                </dict>
            </array>
        </dict>
        <key>braces</key>
        <dict>
            <key>begin</key>
            <string>(?:^|(?&lt;=\s))\{</string>
            <key>comment</key>
            <string>matches a single brace-enclosed word</string>
            <key>end</key>
            <string>\}([^\s\]]*)</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>invalid.illegal.tcl</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\[{}\n]</string>
                    <key>name</key>
                    <string>constant.character.escape.tcl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#inner-braces</string>
                </dict>
            </array>
        </dict>
        <key>embedded</key>
        <dict>
            <key>begin</key>
            <string>\[</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.section.embedded.begin.tcl</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\]</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.section.embedded.end.tcl</string>
                </dict>
            </dict>
            <key>name</key>
            <string>source.tcl.embedded</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>source.tcl</string>
                </dict>
            </array>
        </dict>
        <key>escape</key>
        <dict>
            <key>match</key>
            <string>\\(\d{1,3}|x[a-fA-F0-9]+|u[a-fA-F0-9]{1,4}|.|\n)</string>
            <key>name</key>
            <string>constant.character.escape.tcl</string>
        </dict>
        <key>inner-braces</key>
        <dict>
            <key>begin</key>
            <string>\{</string>
            <key>comment</key>
            <string>matches a nested brace in a brace-enclosed word</string>
            <key>end</key>
            <string>\}</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\[{}\n]</string>
                    <key>name</key>
                    <string>constant.character.escape.tcl</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#inner-braces</string>
                </dict>
            </array>
        </dict>
        <key>regexp</key>
        <dict>
            <key>begin</key>
            <string>(?=\S)(?![\n;\]])</string>
            <key>comment</key>
            <string>matches a single word, named as a regexp, then swallows the rest of the command</string>
            <key>end</key>
            <string>(?=[\n;\]])</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>begin</key>
                    <string>(?=[^ \t\n;])</string>
                    <key>end</key>
                    <string>(?=[ \t\n;])</string>
                    <key>name</key>
                    <string>string.regexp.tcl</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#braces</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#bare-string</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#escape</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#variable</string>
                        </dict>
                    </array>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>[ \t]</string>
                    <key>comment</key>
                    <string>swallow the rest of the command</string>
                    <key>end</key>
                    <string>(?=[\n;\]])</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#variable</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#embedded</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#escape</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#braces</string>
                        </dict>
                        <dict>
                            <key>include</key>
                            <string>#string</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <key>string</key>
        <dict>
            <key>applyEndPatternLast</key>
            <integer>1</integer>
            <key>begin</key>
            <string>(?:^|(?&lt;=\s))(?=")</string>
            <key>comment</key>
            <string>matches a single quote-enclosed word with scoping</string>
            <key>end</key>
            <string></string>
            <key>name</key>
            <string>string.quoted.double.tcl</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#bare-string</string>
                </dict>
            </array>
        </dict>
        <key>variable</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.variable.tcl</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(\$)((?:[a-zA-Z0-9_]|::)+(\([^\)]+\))?|\{[^\}]*\})</string>
            <key>name</key>
            <string>variable.other.tcl</string>
        </dict>
    </dict>
    <key>scopeName</key>
    <string>source.tcl</string>
    <key>uuid</key>
    <string>71a63c52-07f4-4ddc-b210-0032ad878808</string>
</dict>
</plist>